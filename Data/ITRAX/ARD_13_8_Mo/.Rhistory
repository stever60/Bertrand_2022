function(x){unlist(slider::slide(x, mean, .before = 5, .after = 5))}
)
ggplot(ARD_xrfSmooth, mapping = aes(x = depth, y = Ca)) +
geom_line(data = ARD_xrf, col = "grey80") +
geom_line() +
scale_x_reverse() +
theme_paleo()
ggsave("Figures/Fig14_Ca_smoothed.pdf",
height = c(15), width = c(30), dpi = 600, units = "cm")
allelements
# Smoothed Mo inc normalised plot - final join, smooth and plot with elements of most interest
full_join(y = ARD_xrfNorm %>%
as_tibble() %>%
# uses a 10 point running mean (2 cm for this data); 5 before, 5 after
mutate(across(any_of(c(elementsList1)),
function(x){unlist(slider::slide(x, mean, .before = 5, .after = 5))}
)
) %>%
mutate(type = "mean"),
x = ARD_xrfNorm %>%
as_tibble() %>%
mutate(type = "raw")
) %>%
filter(validity == TRUE) %>%
#filter(qc == TRUE) %>%
select(P, Ca, Ti, Cu, Zn, Sr, coh_inc, MSE, depth, label, type) %>%
tidyr::pivot_longer(!c("depth", "label", "type"), names_to = "elements", values_to = "peakarea") %>%
tidyr::drop_na() %>%
mutate(elements = factor(elements, levels = c("MSE", elementsList1))) %>%
mutate(label = as_factor(label),
type = as_factor(type)
) %>%
glimpse() %>%
ggplot(aes(x = peakarea, y = depth)) +
tidypaleo::geom_lineh(aes(group = type, colour = label, alpha = type)) +
scale_alpha_manual(values = c(0.1, 1)) +
scale_y_reverse() +
scale_x_continuous(n.breaks = 2) +
facet_geochem_gridh(vars(elements)) +
labs(x = "peak area", y = "Depth [mm]") +
theme_bw() +
theme(legend.position = "none")
# Smoothed Mo inc normalised plot - final join, smooth and plot with elements of most interest
full_join(y = ARD_xrfNorm %>%
as_tibble() %>%
# uses a 10 point running mean (2 cm for this data); 5 before, 5 after
mutate(across(any_of(c(elementsList1)),
function(x){unlist(slider::slide(x, mean, .before = 5, .after = 5))}
)
) %>%
mutate(type = "mean"),
x = ARD_xrfNorm %>%
as_tibble() %>%
mutate(type = "raw")
) %>%
#filter(validity == TRUE) %>% not needed because ARD_xrfNorm has already been filtered
#filter(qc == TRUE) %>%
select(P, Ca, Ti, Cu, Zn, Sr, coh_inc, MSE, depth, label, type) %>%
tidyr::pivot_longer(!c("depth", "label", "type"), names_to = "elements", values_to = "peakarea") %>%
tidyr::drop_na() %>%
mutate(elements = factor(elements, levels = c("MSE", elementsList1))) %>%
mutate(label = as_factor(label),
type = as_factor(type)
) %>%
glimpse() %>%
ggplot(aes(x = peakarea, y = depth)) +
tidypaleo::geom_lineh(aes(group = type, colour = label, alpha = type)) +
scale_alpha_manual(values = c(0.1, 1)) +
scale_y_reverse() +
scale_x_continuous(n.breaks = 2) +
facet_geochem_gridh(vars(elements)) +
labs(x = "peak area", y = "Depth [mm]") +
theme_bw() +
theme(legend.position = "none")
# Smoothed Mo inc normalised plot - final join, smooth and plot with elements of most interest
full_join(y = ARD_xrfNorm %>%
as_tibble() %>%
# uses a 10 point running mean (2 cm for this data); 5 before, 5 after
mutate(across(any_of(c(elementsList1)),
function(x){unlist(slider::slide(x, mean, .before = 5, .after = 5))}
)
) %>%
mutate(type = "mean"),
x = ARD_xrfNorm %>%
as_tibble() %>%
mutate(type = "raw")
) %>%
#filter(validity == TRUE) %>% not needed because ARD_xrfNorm has already been filtered
#filter(qc == TRUE) %>%
select(P, Ca, Ti, Cu, Zn, Sr, coh_inc, depth, label, type) %>%
tidyr::pivot_longer(!c("depth", "label", "type"), names_to = "elements", values_to = "peakarea") %>%
tidyr::drop_na() %>%
mutate(elements = factor(elements, levels = c("MSE", elementsList1))) %>%
mutate(label = as_factor(label),
type = as_factor(type)
) %>%
glimpse() %>%
ggplot(aes(x = peakarea, y = depth)) +
tidypaleo::geom_lineh(aes(group = type, colour = label, alpha = type)) +
scale_alpha_manual(values = c(0.1, 1)) +
scale_y_reverse() +
scale_x_continuous(n.breaks = 2) +
facet_geochem_gridh(vars(elements)) +
labs(x = "peak area", y = "Depth [mm]") +
theme_bw() +
theme(legend.position = "none")
# validity filtered
ARD_xrfNorm <- ARD_xrf %>% # n = 2005
mutate(`coh_inc` = `Mo coh`/`Mo inc`) %>%
mutate(`inc_coh` = `Mo inc`/`Mo coh`) %>%
mutate(TS_sum = `Mo inc` + `Mo coh`) %>% # added by sjro to match Aber normalisation method
mutate(cps_sum = rowSums(.[allelements])) %>% # added by sjro to match Aber normalisation method
# transform
mutate(across(any_of(elementsList)) /`Mo inc`) %>%
mutate_if(is.numeric, list(~na_if(., Inf))) %>% # convert all Inf to NA
# identify acceptable observations - validity and/or qc
# comment in/out to choose either/or, or both
filter(validity == TRUE) %>% # n = 1996
#filter(qc == TRUE) %>% # n = 1707
# identify acceptable variables
select(P, S, any_of(myElements), `coh_inc`, `cps_sum`, depth, label) %>%
select(-c(Ar))
# Smoothed Mo inc normalised plot - validity filtered - elements of most interest
full_join(y = ARD_xrfNorm %>%
as_tibble() %>%
# uses a 10 point running mean (2 cm for this data); 5 before, 5 after
mutate(across(any_of(c(elementsList1)),
function(x){unlist(slider::slide(x, mean, .before = 5, .after = 5))}
)
) %>%
mutate(type = "mean"),
x = ARD_xrfNorm %>%
as_tibble() %>%
mutate(type = "raw")
) %>%
#filter(validity == TRUE) %>% not needed because ARD_xrfNorm has already been filtered
#filter(qc == TRUE) %>%
select(P, Ca, Ti, Cu, Zn, Sr, coh_inc, depth, label, type) %>%
tidyr::pivot_longer(!c("depth", "label", "type"), names_to = "elements", values_to = "peakarea") %>%
tidyr::drop_na() %>%
mutate(elements = factor(elements, levels = c("MSE", elementsList1))) %>%
mutate(label = as_factor(label),
type = as_factor(type)
) %>%
glimpse() %>%
ggplot(aes(x = peakarea, y = depth)) +
tidypaleo::geom_lineh(aes(group = type, colour = label, alpha = type)) +
scale_alpha_manual(values = c(0.1, 1)) +
scale_y_reverse() +
scale_x_continuous(n.breaks = 2) +
facet_geochem_gridh(vars(elements)) +
labs(x = "peak area", y = "Depth [mm]") +
theme_bw() +
theme(legend.position = "none")
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank())
ggsave("Figures/Fig16_smoothed_incNorm_qc.pdf",
height = c(15), width = c(30), dpi = 600, units = "cm")
# Smoothed Mo inc normalised plot - validity filtered - elements of most interest
full_join(y = ARD_xrfNorm %>%
as_tibble() %>%
# uses a 10 point running mean (2 cm for this data); 5 before, 5 after
mutate(across(any_of(c(elementsList1)),
function(x){unlist(slider::slide(x, mean, .before = 5, .after = 5))}
)
) %>%
mutate(type = "mean"),
x = ARD_xrfNorm %>%
as_tibble() %>%
mutate(type = "raw")
) %>%
#filter(validity == TRUE) %>% not needed because ARD_xrfNorm has already been filtered
#filter(qc == TRUE) %>%
select(P, Ca, Ti, Cu, Zn, Sr, coh_inc, depth, label, type) %>%
tidyr::pivot_longer(!c("depth", "label", "type"), names_to = "elements", values_to = "peakarea") %>%
tidyr::drop_na() %>%
mutate(elements = factor(elements, levels = c("MSE", elementsList1))) %>%
mutate(label = as_factor(label),
type = as_factor(type)
) %>%
glimpse() %>%
ggplot(aes(x = peakarea, y = depth)) +
tidypaleo::geom_lineh(aes(group = type, colour = label, alpha = type)) +
scale_alpha_manual(values = c(0.1, 1)) +
scale_y_reverse() +
scale_x_continuous(n.breaks = 2) +
facet_geochem_gridh(vars(elements)) +
labs(x = "peak area / Mo inc.", y = "Depth [mm]") +
theme_bw() +
theme(legend.position = "none")
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank())
ggsave("Figures/Fig16_smoothed_incNorm_qc.pdf",
height = c(15), width = c(30), dpi = 600, units = "cm")
# Smoothed Mo inc normalised plot - validity filtered - elements of most interest
full_join(y = ARD_xrfNorm %>%
as_tibble() %>%
# uses a 10 point running mean (2 cm for this data); 5 before, 5 after
mutate(across(any_of(c(elementsList1)),
function(x){unlist(slider::slide(x, mean, .before = 5, .after = 5))}
)
) %>%
mutate(type = "mean"),
x = ARD_xrfNorm %>%
as_tibble() %>%
mutate(type = "raw")
) %>%
#filter(validity == TRUE) %>% not needed because ARD_xrfNorm has already been filtered
#filter(qc == TRUE) %>%
select(P, Ca, Ti, Cu, Zn, Sr, coh_inc, depth, label, type) %>%
tidyr::pivot_longer(!c("depth", "label", "type"), names_to = "elements", values_to = "peakarea") %>%
tidyr::drop_na() %>%
mutate(elements = factor(elements, levels = c("MSE", elementsList1))) %>%
mutate(label = as_factor(label),
type = as_factor(type)
) %>%
glimpse() %>%
ggplot(aes(x = peakarea, y = depth)) +
tidypaleo::geom_lineh(aes(group = type, colour = label, alpha = type)) +
scale_alpha_manual(values = c(0.1, 1)) +
scale_y_reverse() +
scale_x_continuous(n.breaks = 2) +
facet_geochem_gridh(vars(elements)) +
labs(x = "peak area / Mo inc.", y = "Depth [mm]") +
theme_bw() +
theme(legend.position = "none")
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank())
ggsave("Figures/Fig16_smoothed_incNorm.pdf",
height = c(15), width = c(30), dpi = 600, units = "cm")
# Smoothed Mo inc normalised plot - validity filtered - elements of most interest
full_join(y = ARD_xrfNorm_qc %>%
as_tibble() %>%
# uses a 10 point running mean (2 cm for this data); 5 before, 5 after
mutate(across(any_of(c(elementsList1)),
function(x){unlist(slider::slide(x, mean, .before = 5, .after = 5))}
)
) %>%
mutate(type = "mean"),
x = ARD_xrfNorm_qc %>%
as_tibble() %>%
mutate(type = "raw")
) %>%
#filter(validity == TRUE) %>% not needed because ARD_xrfNorm has already been filtered
#filter(qc == TRUE) %>%
select(P, Ca, Ti, Cu, Zn, Sr, coh_inc, depth, label, type) %>%
tidyr::pivot_longer(!c("depth", "label", "type"), names_to = "elements", values_to = "peakarea") %>%
tidyr::drop_na() %>%
mutate(elements = factor(elements, levels = c("MSE", elementsList1))) %>%
mutate(label = as_factor(label),
type = as_factor(type)
) %>%
glimpse() %>%
ggplot(aes(x = peakarea, y = depth)) +
tidypaleo::geom_lineh(aes(group = type, colour = label, alpha = type)) +
scale_alpha_manual(values = c(0.1, 1)) +
scale_y_reverse() +
scale_x_continuous(n.breaks = 2) +
facet_geochem_gridh(vars(elements)) +
labs(x = "peak area / Mo inc.", y = "Depth [mm]") +
theme_bw() +
theme(legend.position = "none")
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank())
ggsave("Figures/Fig16_smoothed_incNorm_qc.pdf",
height = c(15), width = c(30), dpi = 600, units = "cm")
ARD_xrfNorm_qc <- ARD_xrf %>% # n = 2005
mutate(`coh_inc` = `Mo coh`/`Mo inc`) %>%
mutate(`inc_coh` = `Mo inc`/`Mo coh`) %>%
mutate(TS_sum = `Mo inc` + `Mo coh`) %>% # added by sjro to match Aber normalisation method
mutate(cps_sum = rowSums(.[allelements])) %>% # added by sjro to match Aber normalisation method
# transform
mutate(across(any_of(elementsList)) /`Mo inc`) %>%
mutate_if(is.numeric, list(~na_if(., Inf))) %>% # convert all Inf to NA
# identify acceptable observations - validity and/or qc
# comment in/out to choose either/or, or both
filter(validity == TRUE) %>% # n = 1996
filter(qc == TRUE) %>% # n = 1707
# identify acceptable variables
select(P, S, any_of(myElements), `coh_inc`, `cps_sum`, depth, label) %>%
select(-c(Ar))
# Smoothed Mo inc normalised plot - validity filtered - elements of most interest
full_join(y = ARD_xrfNorm_qc %>%
as_tibble() %>%
# uses a 10 point running mean (2 cm for this data); 5 before, 5 after
mutate(across(any_of(c(elementsList1)),
function(x){unlist(slider::slide(x, mean, .before = 5, .after = 5))}
)
) %>%
mutate(type = "mean"),
x = ARD_xrfNorm_qc %>%
as_tibble() %>%
mutate(type = "raw")
) %>%
#filter(validity == TRUE) %>% not needed because ARD_xrfNorm has already been filtered
#filter(qc == TRUE) %>%
select(P, Ca, Ti, Cu, Zn, Sr, coh_inc, depth, label, type) %>%
tidyr::pivot_longer(!c("depth", "label", "type"), names_to = "elements", values_to = "peakarea") %>%
tidyr::drop_na() %>%
mutate(elements = factor(elements, levels = c("MSE", elementsList1))) %>%
mutate(label = as_factor(label),
type = as_factor(type)
) %>%
glimpse() %>%
ggplot(aes(x = peakarea, y = depth)) +
tidypaleo::geom_lineh(aes(group = type, colour = label, alpha = type)) +
scale_alpha_manual(values = c(0.1, 1)) +
scale_y_reverse() +
scale_x_continuous(n.breaks = 2) +
facet_geochem_gridh(vars(elements)) +
labs(x = "peak area / Mo inc.", y = "Depth [mm]") +
theme_bw() +
theme(legend.position = "none")
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank())
ggsave("Figures/Fig16_smoothed_incNorm_qc.pdf",
height = c(15), width = c(30), dpi = 600, units = "cm")
# Smoothed Mo inc normalised plot - validity and qc filtered - elements of most interest
full_join(y = ARD_xrfNorm_qc %>%
as_tibble() %>%
# uses a 10 point running mean (2 cm for this data); 5 before, 5 after
mutate(across(any_of(c(elementsList1)),
function(x){unlist(slider::slide(x, mean, .before = 5, .after = 5))}
)
) %>%
mutate(type = "mean"),
x = ARD_xrfNorm_qc %>%
as_tibble() %>%
mutate(type = "raw")
) %>%
#filter(validity == TRUE) %>% not needed because ARD_xrfNorm has already been filtered
#filter(qc == TRUE) %>%
select(P, Ca, Ti, Cu, Zn, Sr, coh_inc, depth, label, type) %>%
tidyr::pivot_longer(!c("depth", "label", "type"), names_to = "elements", values_to = "peakarea") %>%
tidyr::drop_na() %>%
mutate(elements = factor(elements, levels = c("MSE", elementsList1))) %>%
mutate(label = as_factor(label),
type = as_factor(type)
) %>%
glimpse() %>%
ggplot(aes(x = peakarea, y = depth)) +
tidypaleo::geom_lineh(aes(group = type, colour = label, alpha = type)) +
scale_alpha_manual(values = c(0.1, 1)) +
scale_y_reverse() +
scale_x_continuous(n.breaks = 2) +
facet_geochem_gridh(vars(elements)) +
labs(x = "peak area / Mo inc.", y = "Depth [mm]") +
theme_bw() +
theme(legend.position = "none") +
ggtitle("Smoothed (10 pt, 2 cm RM) inc. normalised")
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank())
ggsave("Figures/Fig16_smoothed_incNorm_qc.pdf",
height = c(15), width = c(30), dpi = 600, units = "cm")
# Smoothed Mo inc normalised plot - validity filtered - elements of most interest
full_join(y = ARD_xrfNorm %>%
as_tibble() %>%
# uses a 10 point running mean (2 cm for this data); 5 before, 5 after
mutate(across(any_of(c(elementsList1)),
function(x){unlist(slider::slide(x, mean, .before = 5, .after = 5))}
)
) %>%
mutate(type = "mean"),
x = ARD_xrfNorm %>%
as_tibble() %>%
mutate(type = "raw")
) %>%
#filter(validity == TRUE) %>% not needed because ARD_xrfNorm has already been filtered
#filter(qc == TRUE) %>%
select(P, Ca, Ti, Cu, Zn, Sr, coh_inc, depth, label, type) %>%
tidyr::pivot_longer(!c("depth", "label", "type"), names_to = "elements", values_to = "peakarea") %>%
tidyr::drop_na() %>%
mutate(elements = factor(elements, levels = c("MSE", elementsList1))) %>%
mutate(label = as_factor(label),
type = as_factor(type)
) %>%
glimpse() %>%
ggplot(aes(x = peakarea, y = depth)) +
tidypaleo::geom_lineh(aes(group = type, colour = label, alpha = type)) +
scale_alpha_manual(values = c(0.1, 1)) +
scale_y_reverse() +
scale_x_continuous(n.breaks = 2) +
facet_geochem_gridh(vars(elements)) +
labs(x = "peak area / Mo inc.", y = "Depth [mm]") +
theme_bw() +
theme(legend.position = "none") +
ggtitle("Smoothed (10 pt, 2 cm RM) inc. normalised; validity filtered")
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank())
ggsave("Figures/Fig16_smoothed_incNorm.pdf",
height = c(15), width = c(30), dpi = 600, units = "cm")
# Smoothed Mo inc normalised plot - validity and qc filtered - elements of most interest
full_join(y = ARD_xrfNorm_qc %>%
as_tibble() %>%
# uses a 10 point running mean (2 cm for this data); 5 before, 5 after
mutate(across(any_of(c(elementsList1)),
function(x){unlist(slider::slide(x, mean, .before = 5, .after = 5))}
)
) %>%
mutate(type = "mean"),
x = ARD_xrfNorm_qc %>%
as_tibble() %>%
mutate(type = "raw")
) %>%
#filter(validity == TRUE) %>% not needed because ARD_xrfNorm has already been filtered
#filter(qc == TRUE) %>%
select(P, Ca, Ti, Cu, Zn, Sr, coh_inc, depth, label, type) %>%
tidyr::pivot_longer(!c("depth", "label", "type"), names_to = "elements", values_to = "peakarea") %>%
tidyr::drop_na() %>%
mutate(elements = factor(elements, levels = c("MSE", elementsList1))) %>%
mutate(label = as_factor(label),
type = as_factor(type)
) %>%
glimpse() %>%
ggplot(aes(x = peakarea, y = depth)) +
tidypaleo::geom_lineh(aes(group = type, colour = label, alpha = type)) +
scale_alpha_manual(values = c(0.1, 1)) +
scale_y_reverse() +
scale_x_continuous(n.breaks = 2) +
facet_geochem_gridh(vars(elements)) +
labs(x = "peak area / Mo inc.", y = "Depth [mm]") +
theme_bw() +
theme(legend.position = "none") +
ggtitle("Smoothed (10 pt, 2 cm RM) inc. normalised; validity and qc filtered")
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank())
ggsave("Figures/Fig17_smoothed_incNorm_qc.pdf",
height = c(15), width = c(30), dpi = 600, units = "cm")
# Smoothed Mo inc normalised plot - validity filtered - elements of most interest
full_join(y = ARD_xrfNorm %>%
as_tibble() %>%
# uses a 10 point running mean (2 cm for this data); 5 before, 5 after
mutate(across(any_of(c(elementsList1)),
function(x){unlist(slider::slide(x, mean, .before = 5, .after = 5))}
)
) %>%
mutate(type = "mean"),
x = ARD_xrfNorm %>%
as_tibble() %>%
mutate(type = "raw")
) %>%
#filter(validity == TRUE) %>% not needed because ARD_xrfNorm has already been filtered
#filter(qc == TRUE) %>%
select(P, Ca, Ti, Cu, Zn, Sr, coh_inc, depth, label, type) %>%
tidyr::pivot_longer(!c("depth", "label", "type"), names_to = "elements", values_to = "peakarea") %>%
tidyr::drop_na() %>%
mutate(elements = factor(elements, levels = c("MSE", elementsList1))) %>%
mutate(label = as_factor(label),
type = as_factor(type)
) %>%
glimpse() %>%
ggplot(aes(x = peakarea, y = depth)) +
tidypaleo::geom_lineh(aes(group = type, colour = label, alpha = type)) +
scale_alpha_manual(values = c(0.1, 1)) +
scale_y_reverse() +
scale_x_continuous(n.breaks = 2) +
facet_geochem_gridh(vars(elements)) +
labs(x = "peak area / Mo inc.", y = "Depth [mm]") +
theme_bw() +
theme(legend.position = "none") +
ggtitle("Smoothed (10 pt, 2 cm RM) inc. normalised; validity filtered")
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank())
ggsave("Figures/Fig16_smoothed_incNorm.pdf",
height = c(15), width = c(30), dpi = 600, units = "cm")
# Smoothed cps plot - final join, smooth and plot with elements of most interest
full_join(y = ARD_xrf1 %>%
as_tibble() %>%
# uses a 10 point running mean (2 cm for this data); 5 before, 5 after
mutate(across(any_of(c(elementsList1)),
function(x){unlist(slider::slide(x, mean, .before = 5, .after = 5))}
)
) %>%
mutate(type = "mean"),
x = ARD_xrf1 %>%
as_tibble() %>%
mutate(type = "raw")
) %>%
filter(validity == TRUE) %>%
#filter(qc == TRUE) %>%
select(P, Ca, Ti, Cu, Zn, Sr, coh_inc, MSE, depth, label, type) %>%
tidyr::pivot_longer(!c("depth", "label", "type"), names_to = "elements", values_to = "peakarea") %>%
tidyr::drop_na() %>%
mutate(elements = factor(elements, levels = c("MSE", elementsList1))) %>%
mutate(label = as_factor(label),
type = as_factor(type)
) %>%
glimpse() %>%
ggplot(aes(x = peakarea, y = depth)) +
tidypaleo::geom_lineh(aes(group = type, colour = label, alpha = type)) +
scale_alpha_manual(values = c(0.1, 1)) +
scale_y_reverse() +
scale_x_continuous(n.breaks = 2) +
facet_geochem_gridh(vars(elements)) +
labs(x = "peak area", y = "Depth [mm]") +
theme_bw() +
theme(legend.position = "none") +
ggtitle("Smoothed (10 pt, 2 cm RM) cps; validity filtered")
#axis.text.x = element_blank(),
#axis.ticks.x = element_blank())
ggsave("Figures/Fig15_smoothed_cps.pdf",
height = c(15), width = c(30), dpi = 600, units = "cm")
# Write to file  --------------------------------------------------------
write.csv(ARD_xrf,"Output/ARD_xrf.csv", row.names = FALSE)
write.csv(ARD_xrf1,"Output/ARD_xrf1.csv", row.names = FALSE)
write.csv(ARD_xrfNorm,"Output/ARD_xrf1.csv", row.names = FALSE)
write.csv(ARD_xrfNorm_qc,"Output/ARD_xrf1.csv", row.names = FALSE)
# Write to file  --------------------------------------------------------
write.csv(ARD_xrf,"Output/ARD_xrf.csv", row.names = FALSE)
write.csv(ARD_xrf1,"Output/ARD_xrf1.csv", row.names = FALSE)
write.csv(ARD_xrfNorm,"Output/ARD_xrfNorm.csv", row.names = FALSE)
write.csv(ARD_xrfNorm_qc,"Output/ARD_xrfNorm_qc.csv", row.names = FALSE)
